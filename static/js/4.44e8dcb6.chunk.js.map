{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","classes","dialog","activeClassName","active","to","id","name","Message","message","maxLength30","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","sendButton","Dialogs","state","dialogsPage","dialogElements","dialogs","map","key","messagesElements","messages","isAuth","dialogItems","values","sendMessage","newMessageBody","mapStateToProps","auth","compose","connect","dispatch","sendMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,8B,uGCcxOC,EAVI,SAAAC,GACjB,OACE,yBAAKC,UAAS,UAAKC,IAAQC,SACzB,kBAAC,IAAD,CAASC,gBAAiBF,IAAQG,OAAQC,GAAE,mBAAcN,EAAMO,KAC7DP,EAAMQ,QCFAC,EAJC,SAAAT,GACd,OAAO,yBAAKC,UAAWC,IAAQQ,SAAUV,EAAMU,U,yCCE3CC,EAAcC,YAAiB,IAatBC,cAAU,CAACC,KAAM,wBAAjBD,EAXM,SAACb,GAClB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,IAAUR,GAAcS,UAAWC,IAAUb,KAAM,iBAAkBc,YAAa,2BAExG,6BACI,4BAAQrB,UAAWC,IAAQqB,YAA3B,qBCkBDC,EA1BC,SAAAxB,GACZ,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAA1B,GAAM,OACzC,kBAAC,EAAD,CAAYI,GAAIJ,EAAOI,GAAIC,KAAML,EAAOK,KAAMsB,IAAK3B,EAAOI,UAG1DwB,EAAmBN,EAAMO,SAASH,KAAI,SAAAnB,GAAO,OAC7C,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASoB,IAAKpB,EAAQH,UAOpD,OAAKP,EAAMiC,OAGP,yBAAKhC,UAAWC,IAAQ0B,SACpB,yBAAK3B,UAAWC,IAAQgC,aAAcP,GACtC,yBAAK1B,UAAWC,IAAQ8B,UAAWD,GACnC,kBAAC,EAAD,CAAgBhB,SAVF,SAACoB,GACnBnC,EAAMoC,YAAYD,EAAOE,oBAGH,kBAAC,IAAD,CAAU/B,GAAI,Y,wCClBtCgC,EAAkB,SAAAb,GAAK,MAAK,CAChCQ,OAAQR,EAAMc,KAAKN,S,OCgBNO,sBAAQC,aAdD,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACgB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAyBN,UDRd,SAAAO,GAAc,IACtCC,EADqC,iLAGvC,OAAKC,KAAK9C,MAAMiC,OAET,kBAACW,EAAcE,KAAK9C,OAFI,kBAAC,IAAD,CAAUM,GAAI,eAHN,GACXyC,IAAMH,WAStC,OADiCH,YAAQH,EAARG,CAAyBI,KCI7CL,CAAwEhB","file":"static/js/4.44e8dcb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3V-H6\",\"dialogItems\":\"Dialogs_dialogItems__BpqX1\",\"dialog\":\"Dialogs_dialog__1Iqd5\",\"active\":\"Dialogs_active__yPqiP\",\"messages\":\"Dialogs_messages__3M68_\",\"message\":\"Dialogs_message__2xglg\",\"sendButton\":\"Dialogs_sendButton__2cDd1\"};","import React from \"react\";\r\nimport classes from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = props => {\r\n  return (\r\n    <div className={`${classes.dialog}`}>\r\n      <NavLink activeClassName={classes.active} to={`/dialogs/${props.id}`}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport classes from \"../Dialogs.module.css\";\r\n\r\nconst Message = props => {\r\n  return <div className={classes.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import {Field, reduxForm} from \"redux-form\";\r\nimport classes from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nlet AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required, maxLength30]} component={Textarea} name={'newMessageBody'} placeholder={'enter your message...'}/>\r\n            </div>\r\n            <div>\r\n                <button className={classes.sendButton}>Send message</button></div>\r\n        </form>)\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = props => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogElements = state.dialogs.map(dialog => (\r\n        <DialogItem id={dialog.id} name={dialog.name} key={dialog.id++}/>\r\n    ));\r\n\r\n    let messagesElements = state.messages.map(message => (\r\n        <Message message={message.message} key={message.id++}/>\r\n    ));\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogItems}>{dialogElements}</div>\r\n            <div className={classes.messages}>{messagesElements}</div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = Component => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n  return ConnectedRedirectComponent;\r\n};\r\n","// import React from \"react\";\r\nimport {sendMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody));\r\n        }\r\n    };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n"],"sourceRoot":""}