{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","value","onChange","ev","currentTarget","onBlur","updateStatus","autoFocus","profileDataFormRedux","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","styles","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","classes","href","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","defaultPhoto","alt","mainPhoto","target","files","length","onProfilePhotoSelected","initialValues","formData","then","Post","item","message","likeCounter","maxLength30","maxLengthCreator","NewPostForm","Field","validate","required","placeholder","component","name","MyPosts","React","memo","postElements","posts","post","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userID","this","match","params","authorizedUserID","getUserProfile","getStatus","history","push","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.a80e0882.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__is_b3\",\"headerImg\":\"ProfileInfo_headerImg__2C0Eq\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1FoXd\",\"contact\":\"ProfileInfo_contact__2aZUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3kOR2\",\"posts\":\"MyPosts_posts__xDpCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3cXhJ\",\"active\":\"Post_active__xHCzr\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (ev) => {\r\n        setStatus(ev.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n            <span onDoubleClick={activateEditMode}>\r\n              {props.status || \"======\"}\r\n            </span>\r\n                </div>\r\n            }\r\n            {editMode && (\r\n                <div>\r\n                    <input value={status} onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n    export default ProfileStatusWithHooks;\r\n\r\n\r\n","import React from \"react\";\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport s from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button>save </button>\r\n      </div>\r\n      {error && <div className={s.formSummaryError}>{error}</div>}\r\n\r\n\r\n      <div>\r\n        <b>Full name:</b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job:</b>\r\n        {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n      </div>\r\n      <div>\r\n        <b>My professional skills:</b>\r\n        {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>About me:</b>\r\n        {createField(\"About me...\", \"aboutMe\", [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>Contacts:</b>\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return (\r\n            <div key={key} className={styles.contact}>\r\n              <b>{key}:</b> {createField(key, \"contacts.\"+key, [], Input)}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst profileDataFormRedux = reduxForm({ form: \"editProfile\" })(ProfileDataForm);\r\nexport default profileDataFormRedux;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport defaultPhoto from \"../../../assets/images/benderPic.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onProfilePhotoSelected = ev => {\r\n    if (ev.target.files.length) {\r\n      savePhoto(ev.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = formData => {\r\n    const promise = saveProfile(formData);\r\n    promise.then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.descriptionBlock}>\r\n      <img src={profile.photos.large || defaultPhoto} alt=\"\" className={classes.mainPhoto} /><br></br>\r\n      {isOwner && (\r\n        <input\r\n          type=\"file\"\r\n          onChange={ev => {\r\n            onProfilePhotoSelected(ev);\r\n          }}\r\n        />\r\n      )}\r\n      {editMode ? (\r\n        <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n      ) : (\r\n        <ProfileData\r\n          profile={profile}\r\n          isOwner={isOwner}\r\n          goToEditMode={() => {\r\n            setEditMode(true);\r\n          }}\r\n        />\r\n      )}\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full name:</b> {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      <div>\r\n        <b>Skills:</b> {profile.lookingForAJobDescription}\r\n      </div>\r\n      <div>\r\n        <b>About me:</b>\r\n        {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts:</b>\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={classes.contact}>\r\n      <b>{contactTitle}:</b> <a href={contactValue}>{contactValue}</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img\r\n        src=\"https://whatsism.com/uploads/posts/2018-05/thumbs/1525374264_7f85e7b.jpeg\"\r\n        alt=\"avatar\"\r\n      />\r\n      {props.message};\r\n      <div>\r\n        <span>like {props.likeCounter}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nlet NewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required, maxLength30]} placeholder={\"type post text here\"} component={Textarea}\r\n                       name={'newPostText'}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nNewPostForm = reduxForm({form: 'NewPostForm'})(NewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n\r\n    let postElements = props.posts.map(post => (\r\n        <Post key={post.id} message={post.message} likeCounter={post.likeCounter}/>\r\n    ));\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <NewPostForm onSubmit={addPost}/>\r\n            <div className={classes.posts}>{postElements}</div>\r\n        </div>\r\n    );\r\n});\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\n// import classes from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = props => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatus, getUserProfile, updateStatus, savePhoto, saveProfile } from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userID = this.props.match.params.userID;\r\n    if (!userID) {\r\n      userID = this.props.authorizedUserID;\r\n      if (!userID) {\r\n        this.props.history.push(\"/login\");\r\n        return;\r\n      }\r\n    }\r\n    this.props.getUserProfile(userID);\r\n    this.props.getStatus(userID);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userID !== prevProps.match.params.userID) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userID}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserID: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter\r\n  // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}