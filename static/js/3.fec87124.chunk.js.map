{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","value","onChange","ev","currentTarget","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","classes","descriptionBlock","src","photos","large","alt","fullName","aboutMe","Preloader","Post","item","message","likeCounter","maxLength30","maxLengthCreator","NewPostForm","onSubmit","handleSubmit","Field","validate","required","placeholder","component","Textarea","name","reduxForm","form","MyPosts","React","memo","postElements","posts","map","post","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userID","this","match","params","authorizedUserID","getUserProfile","getStatus","history","push","Component","compose","auth","id","isAuth","withRouter"],"mappings":"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","file":"static/js/3.fec87124.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__is_b3\",\"headerImg\":\"ProfileInfo_headerImg__2C0Eq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3kOR2\",\"posts\":\"MyPosts_posts__xDpCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3cXhJ\",\"active\":\"Post_active__xHCzr\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (ev) => {\r\n        setStatus(ev.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n            <span onDoubleClick={activateEditMode}>\r\n              {props.status || \"======\"}\r\n            </span>\r\n                </div>\r\n            }\r\n            {editMode && (\r\n                <div>\r\n                    <input value={status} onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n    export default ProfileStatusWithHooks;\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.descriptionBlock}>\r\n      <img src={profile.photos.large} alt=\"\" />\r\n      <div>{profile.fullName}</div>\r\n      <div>{profile.aboutMe}</div>\r\n      <ProfileStatusWithHooks\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img\r\n        src=\"https://whatsism.com/uploads/posts/2018-05/thumbs/1525374264_7f85e7b.jpeg\"\r\n        alt=\"avatar\"\r\n      />\r\n      {props.message};\r\n      <div>\r\n        <span>like {props.likeCounter}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nlet NewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required, maxLength30]} placeholder={\"type post text here\"} component={Textarea}\r\n                       name={'newPostText'}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nNewPostForm = reduxForm({form: 'NewPostForm'})(NewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n\r\n    let postElements = props.posts.map(post => (\r\n        <Post message={post.message} likeCounter={post.likeCounter}/>\r\n    ));\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <NewPostForm onSubmit={addPost}/>\r\n            <div className={classes.posts}>{postElements}</div>\r\n        </div>\r\n    );\r\n});\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\n// import classes from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = props => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getStatus,\r\n  getUserProfile,\r\n  updateStatus\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userID = this.props.match.params.userID;\r\n    if (!userID) {\r\n      userID = this.props.authorizedUserID;\r\n      if (!userID) {\r\n        this.props.history.push(\"/login\");\r\n        return;\r\n      }\r\n    }\r\n    this.props.getUserProfile(userID);\r\n    this.props.getStatus(userID);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserID: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n  // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}